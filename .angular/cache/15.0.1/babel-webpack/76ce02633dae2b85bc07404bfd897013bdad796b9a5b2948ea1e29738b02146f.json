{"ast":null,"code":"import data from './data.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"primeng/table\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/chart\";\nimport * as i6 from \"primeng/tabview\";\nimport * as i7 from \"primeng/fieldset\";\nfunction AppComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 14);\n    i0.ɵɵtext(2, \"Dispositivo \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\", 16);\n    i0.ɵɵtext(5, \"Temperatura \");\n    i0.ɵɵelement(6, \"p-sortIcon\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 18);\n    i0.ɵɵtext(8, \"Humedad \");\n    i0.ɵɵelement(9, \"p-sortIcon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 20);\n    i0.ɵɵtext(11, \"Fecha \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 20);\n    i0.ɵɵtext(14, \"Hora \");\n    i0.ɵɵelement(15, \"p-sortIcon\", 21);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.dispositivo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.temperaturA_REAL);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.humedaD_REAL);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.fecha.toString().split(\"T\")[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r2.fecha.toString().split(\"T\")[1]);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"20rem\"\n  };\n};\nconst _c1 = function () {\n  return [5, 10, 25, 50];\n};\nexport class AppComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.title = 'temperature-and-humedity-control';\n    this.first = 0;\n    this.rows = 10;\n    this.tableData = data;\n    this.basicOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#495057'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#495057'\n          },\n          grid: {\n            color: '#ebedef'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#495057'\n          },\n          grid: {\n            color: '#ebedef'\n          }\n        }\n      }\n    };\n    this.refreshData();\n    this.getParameters();\n    this.getLimites();\n  }\n  updateGraphicData() {\n    let labels = [this.tableData[0].fecha.toString().split('T')[1], this.tableData[20].fecha.toString().split('T')[1], this.tableData[40].fecha.toString().split('T')[1], this.tableData[60].fecha.toString().split('T')[1], this.tableData[80].fecha.toString().split('T')[1], this.tableData[100].fecha.toString().split('T')[1], this.tableData[120].fecha.toString().split('T')[1], this.tableData[140].fecha.toString().split('T')[1], this.tableData[160].fecha.toString().split('T')[1], this.tableData[180].fecha.toString().split('T')[1], this.tableData[200].fecha.toString().split('T')[1]];\n    let dataTemperatura = [this.tableData[0].temperaturA_REAL, this.tableData[20].temperaturA_REAL, this.tableData[40].temperaturA_REAL, this.tableData[60].temperaturA_REAL, this.tableData[80].temperaturA_REAL, this.tableData[100].temperaturA_REAL, this.tableData[120].temperaturA_REAL, this.tableData[140].temperaturA_REAL, this.tableData[160].temperaturA_REAL, this.tableData[180].temperaturA_REAL, this.tableData[200].temperaturA_REAL];\n    let dataHumedad = [this.tableData[0].humedaD_REAL, this.tableData[20].humedaD_REAL, this.tableData[40].humedaD_REAL, this.tableData[60].humedaD_REAL, this.tableData[80].humedaD_REAL, this.tableData[100].humedaD_REAL, this.tableData[120].humedaD_REAL, this.tableData[140].humedaD_REAL, this.tableData[160].humedaD_REAL, this.tableData[180].humedaD_REAL, this.tableData[200].humedaD_REAL];\n    this.basicData = {\n      labels,\n      datasets: [{\n        label: 'Temperatura',\n        data: dataTemperatura,\n        fill: false,\n        borderColor: '#42A5F5',\n        tension: 0.4\n      }, {\n        label: 'Humedad',\n        data: dataHumedad,\n        fill: false,\n        borderColor: '#FFA726',\n        tension: 0.4\n      }]\n    };\n  }\n  refreshData() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getSenses').subscribe(response => {\n      console.log(response);\n      this.tableData = response;\n      this.tableData = this.tableData.sort();\n      this.updateGraphicData();\n    }, error => {\n      this.tableData = data;\n      this.updateGraphicData();\n    });\n  }\n  getParameters() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getParameters').subscribe(response => {\n      console.log(response);\n      this.parametros = response;\n    }, error => {});\n  }\n  getLimites() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getLimites').subscribe(response => {\n      console.log(response);\n      this.limites = response;\n    }, error => {});\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 26,\n    vars: 12,\n    consts: [[1, \"container\"], [2, \"width\", \"100%\"], [\"header\", \"Datos\"], [1, \"card\"], [1, \"table-header\"], [\"type\", \"button\", \"icon\", \"pi pi-refresh\", \"styleClass\", \"p-button-text\", 3, \"click\"], [\"currentPageReportTemplate\", \"Mostrando {first} a {last} de {totalRecords} filas\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"tableStyle\", \"rowsPerPageOptions\"], [\"pTemplate\", \" header\"], [\"pTemplate\", \"body\"], [\"header\", \"Grafica\"], [\"type\", \"line\", 3, \"data\", \"options\"], [\"header\", \"Parametros\"], [\"legend\", \"Header\"], [1, \"m-0\"], [\"pSortableColumn\", \"Dispositivo\", 2, \"width\", \"20%\"], [\"field\", \"Dispositivo\"], [\"pSortableColumn\", \"temperaturA_REAL\", 2, \"width\", \"20%\"], [\"field\", \"temperaturA_REAL\"], [\"pSortableColumn\", \"humedaD_REAL\", 2, \"width\", \"20%\"], [\"field\", \"humedaD_REAL\"], [\"pSortableColumn\", \"fecha\", 2, \"width\", \"20%\"], [\"field\", \"fecha\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-tabView\", 1)(2, \"p-tabPanel\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\");\n        i0.ɵɵtext(6, \"Registro de control de temperatura y humedad \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p-button\", 5);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_p_button_click_7_listener() {\n          return ctx.refreshData();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p-table\", 6);\n        i0.ɵɵtemplate(9, AppComponent_ng_template_9_Template, 16, 0, \"ng-template\", 7);\n        i0.ɵɵtemplate(10, AppComponent_ng_template_10_Template, 11, 5, \"ng-template\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"p-tabPanel\", 9)(12, \"div\", 3)(13, \"h4\");\n        i0.ɵɵtext(14, \"Grafica de valores con intervalos entre 2-5m\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"p-chart\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"p-tabPanel\", 11)(17, \"p-fieldset\", 12)(18, \"p\", 13)(19, \"span\");\n        i0.ɵɵtext(20, \"Valor Correci\\u00F3n temperatura\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21);\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"span\");\n        i0.ɵɵtext(24, \"Valor Correci\\u00F3n humedad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"value\", ctx.tableData)(\"paginator\", true)(\"rows\", 10)(\"showCurrentPageReport\", true)(\"tableStyle\", i0.ɵɵpureFunction0(10, _c0))(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(11, _c1));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"data\", ctx.basicData)(\"options\", ctx.basicOptions);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.parametros.valorCalibracionTemperatura, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.parametros.valorCalibracionHumedad, \" \");\n      }\n    },\n    dependencies: [i2.Table, i3.PrimeTemplate, i2.SortableColumn, i2.SortIcon, i4.Button, i5.UIChart, i6.TabView, i6.TabPanel, i7.Fieldset],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin: 20px 0px;\\n}\\n.container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .table-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceURL=webpack://./src/app/app.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNGO0FBQUU7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7QUFFSjtBQUFJO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUVSIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmNvbnRhaW5lciAuY2FyZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDIwcHggMHB4O1xufVxuLmNvbnRhaW5lciAuY2FyZCAudGFibGUtaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["data","i0","AppComponent","constructor","httpClient","basicOptions","plugins","legend","labels","color","scales","x","ticks","grid","y","refreshData","getParameters","getLimites","updateGraphicData","tableData","fecha","toString","split","dataTemperatura","temperaturA_REAL","dataHumedad","humedaD_REAL","basicData","datasets","label","fill","borderColor","tension","get","subscribe","response","console","log","sort","error","parametros","limites","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Angel\\Arquitectura\\FRONT\\temperature-and-humidity-control\\src\\app\\app.component.ts","F:\\Angel\\Arquitectura\\FRONT\\temperature-and-humidity-control\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport data from './data.json';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'temperature-and-humedity-control';\r\n  first = 0;\r\n  rows = 10;\r\n\r\n  public basicData: any;\r\n  public basicOptions: any;\r\n  public tableData: any[] = data;\r\n  public parametros: any;\r\n  public limites: any;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.basicOptions = {\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: '#495057',\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n      },\r\n    };\r\n    this.refreshData();\r\n    this.getParameters();\r\n    this.getLimites();\r\n  }\r\n\r\n  public updateGraphicData(): void {\r\n    let labels = [\r\n      this.tableData[0].fecha.toString().split('T')[1],\r\n      this.tableData[20].fecha.toString().split('T')[1],\r\n      this.tableData[40].fecha.toString().split('T')[1],\r\n      this.tableData[60].fecha.toString().split('T')[1],\r\n      this.tableData[80].fecha.toString().split('T')[1],\r\n      this.tableData[100].fecha.toString().split('T')[1],\r\n      this.tableData[120].fecha.toString().split('T')[1],\r\n      this.tableData[140].fecha.toString().split('T')[1],\r\n      this.tableData[160].fecha.toString().split('T')[1],\r\n      this.tableData[180].fecha.toString().split('T')[1],\r\n      this.tableData[200].fecha.toString().split('T')[1],\r\n    ];\r\n    let dataTemperatura = [\r\n      this.tableData[0].temperaturA_REAL,\r\n      this.tableData[20].temperaturA_REAL,\r\n      this.tableData[40].temperaturA_REAL,\r\n      this.tableData[60].temperaturA_REAL,\r\n      this.tableData[80].temperaturA_REAL,\r\n      this.tableData[100].temperaturA_REAL,\r\n      this.tableData[120].temperaturA_REAL,\r\n      this.tableData[140].temperaturA_REAL,\r\n      this.tableData[160].temperaturA_REAL,\r\n      this.tableData[180].temperaturA_REAL,\r\n      this.tableData[200].temperaturA_REAL,\r\n    ];\r\n\r\n    let dataHumedad = [\r\n      this.tableData[0].humedaD_REAL,\r\n      this.tableData[20].humedaD_REAL,\r\n      this.tableData[40].humedaD_REAL,\r\n      this.tableData[60].humedaD_REAL,\r\n      this.tableData[80].humedaD_REAL,\r\n      this.tableData[100].humedaD_REAL,\r\n      this.tableData[120].humedaD_REAL,\r\n      this.tableData[140].humedaD_REAL,\r\n      this.tableData[160].humedaD_REAL,\r\n      this.tableData[180].humedaD_REAL,\r\n      this.tableData[200].humedaD_REAL,\r\n    ];\r\n    this.basicData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Temperatura',\r\n          data: dataTemperatura,\r\n          fill: false,\r\n          borderColor: '#42A5F5',\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          label: 'Humedad',\r\n          data: dataHumedad,\r\n          fill: false,\r\n          borderColor: '#FFA726',\r\n          tension: 0.4,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  public refreshData(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getSenses')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.tableData = response;\r\n          this.tableData=this.tableData.sort()\r\n          this.updateGraphicData();\r\n        },\r\n        (error) => {\r\n          this.tableData = data;\r\n          this.updateGraphicData();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getParameters(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getParameters')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.parametros=response;\r\n        },\r\n        (error) => {\r\n        }\r\n      );\r\n  }\r\n  public getLimites(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getLimites')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.limites=response;\r\n        },\r\n        (error) => {\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <p-tabView style=\"width: 100%;\">\r\n    <p-tabPanel header=\"Datos\">\r\n      <div class=\"card\">\r\n        <div class=\"table-header\">\r\n          <h3>Registro de control de temperatura y humedad\r\n          </h3>\r\n          <p-button type=\"button\" icon=\"pi pi-refresh\" styleClass=\"p-button-text\" (click)=\"refreshData();\"></p-button>\r\n        </div>\r\n        <p-table [value]=\"tableData\" [paginator]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\"\r\n          [tableStyle]=\"{'min-width': '20rem'}\"\r\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} filas\" [rowsPerPageOptions]=\"[5,10,25,50]\">\r\n          <ng-template pTemplate=\" header\">\r\n            <tr>\r\n              <th pSortableColumn=\"Dispositivo\" style=\"width:20%\">Dispositivo <p-sortIcon field=\"Dispositivo\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"temperaturA_REAL\" style=\"width:20%\">Temperatura <p-sortIcon field=\"temperaturA_REAL\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"humedaD_REAL\" style=\"width:20%\">Humedad <p-sortIcon field=\"humedaD_REAL\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"fecha\" style=\"width:20%\">Fecha <p-sortIcon field=\"fecha\"></p-sortIcon>\r\n              </th>\r\n              <th pSortableColumn=\"fecha\" style=\"width:20%\">Hora <p-sortIcon field=\"fecha\"></p-sortIcon>\r\n              </th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-data>\r\n            <tr>\r\n              <td>{{data.dispositivo}}</td>\r\n              <td>{{data.temperaturA_REAL}}</td>\r\n              <td>{{data.humedaD_REAL}}</td>\r\n              <td>{{data.fecha.toString().split('T')[0]}}</td>\r\n              <td>{{data.fecha.toString().split('T')[1]}}</td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </p-tabPanel>\r\n    <p-tabPanel header=\"Grafica\">\r\n      <div class=\"card\">\r\n        <h4>Grafica de valores con intervalos entre 2-5m</h4>\r\n        <p-chart type=\"line\" [data]=\"basicData\" [options]=\"basicOptions\"></p-chart>\r\n      </div>\r\n    </p-tabPanel>\r\n    <p-tabPanel header=\"Parametros\">\r\n      <p-fieldset legend=\"Header\">\r\n        <p class=\"m-0\">\r\n            <span>Valor Correción temperatura</span> {{this.parametros.valorCalibracionTemperatura}}\r\n            <br>\r\n            <span>Valor Correción humedad</span> {{this.parametros.valorCalibracionHumedad}}\r\n        </p>\r\n    </p-fieldset>\r\n\r\n    </p-tabPanel>\r\n</p-tabView>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}