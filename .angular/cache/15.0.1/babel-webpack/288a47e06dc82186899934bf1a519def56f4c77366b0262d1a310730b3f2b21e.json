{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport data from './data.json';\nlet AppComponent = class AppComponent {\n  constructor(httpClient, fb) {\n    this.httpClient = httpClient;\n    this.fb = fb;\n    this.title = 'temperature-and-humedity-control';\n    this.first = 0;\n    this.rows = 10;\n    this.tableData = data;\n    this.basicOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#495057'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#495057'\n          },\n          grid: {\n            color: '#ebedef'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#495057'\n          },\n          grid: {\n            color: '#ebedef'\n          }\n        }\n      }\n    };\n    this.refreshData();\n    this.getParameters();\n    this.getLimites();\n    this.formParametros = this.fb.group({\n      tmpCorreccion: [null, Validators.required],\n      hmdCorreccion: [null, Validators.required]\n    });\n    this.formLimites = this.fb.group({\n      minTemp: [null, Validators.required],\n      maxTemp: [null, Validators.required],\n      minHum: [null, Validators.required],\n      maxHum: [null, Validators.required]\n    });\n  }\n  ngOnInit() {\n    setInterval(() => {\n      this.refreshData();\n      this.getParameters();\n      this.getLimites();\n    }, 20000);\n  }\n  updateGraphicData() {\n    let labels = [this.tableData[0].fecha.toString().split('T')[1], this.tableData[20].fecha.toString().split('T')[1], this.tableData[40].fecha.toString().split('T')[1], this.tableData[60].fecha.toString().split('T')[1], this.tableData[80].fecha.toString().split('T')[1], this.tableData[100].fecha.toString().split('T')[1], this.tableData[120].fecha.toString().split('T')[1], this.tableData[140].fecha.toString().split('T')[1], this.tableData[160].fecha.toString().split('T')[1], this.tableData[180].fecha.toString().split('T')[1], this.tableData[200].fecha.toString().split('T')[1]];\n    let dataTemperatura = [this.tableData[0].temperaturA_REAL, this.tableData[20].temperaturA_REAL, this.tableData[40].temperaturA_REAL, this.tableData[60].temperaturA_REAL, this.tableData[80].temperaturA_REAL, this.tableData[100].temperaturA_REAL, this.tableData[120].temperaturA_REAL, this.tableData[140].temperaturA_REAL, this.tableData[160].temperaturA_REAL, this.tableData[180].temperaturA_REAL, this.tableData[200].temperaturA_REAL];\n    let dataHumedad = [this.tableData[0].humedaD_REAL, this.tableData[20].humedaD_REAL, this.tableData[40].humedaD_REAL, this.tableData[60].humedaD_REAL, this.tableData[80].humedaD_REAL, this.tableData[100].humedaD_REAL, this.tableData[120].humedaD_REAL, this.tableData[140].humedaD_REAL, this.tableData[160].humedaD_REAL, this.tableData[180].humedaD_REAL, this.tableData[200].humedaD_REAL];\n    this.basicData = {\n      labels,\n      datasets: [{\n        label: 'Temperatura',\n        data: dataTemperatura,\n        fill: false,\n        borderColor: '#42A5F5',\n        tension: 0.4\n      }, {\n        label: 'Humedad',\n        data: dataHumedad,\n        fill: false,\n        borderColor: '#FFA726',\n        tension: 0.4\n      }]\n    };\n  }\n  refreshData() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getSenses').subscribe(response => {\n      console.log(response);\n      this.tableData = response;\n      this.tableData = this.tableData.sort();\n      this.temperatura = this.tableData[this.tableData.length].temperaturA_REAL;\n      this.humedad = this.tableData[this.tableData.length].humedaD_REAL;\n      this.updateGraphicData();\n    }, error => {\n      this.tableData = data;\n      this.updateGraphicData();\n    });\n  }\n  getParameters() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getParameters').subscribe(response => {\n      console.log(response);\n      this.parametros = response;\n    }, error => {});\n  }\n  getLimites() {\n    this.httpClient.get('https://proyecto-pif-arq.azurewebsites.net/api/getLimites').subscribe(response => {\n      console.log(response);\n      this.limites = response;\n    }, error => {});\n  }\n  guardarCorreccion() {\n    const body = {\n      nuevoValorTemp: this.formParametros?.get('tmpCorreccion')?.value,\n      nuevoValorHumedad: this.formParametros?.get('hmdCorreccion')?.value\n    };\n    this.httpClient.post('https://proyecto-pif-arq.azurewebsites.net/api/calibrar', body).subscribe(response => {\n      console.log(response);\n      if (response?.resultado) {\n        this.getParameters();\n        this.formParametros.reset();\n      }\n    }, error => {});\n  }\n  guardarLimites() {\n    const body = {\n      tempLimitMin: this.formLimites?.get('minTemp')?.value,\n      tempLimitMax: this.formLimites?.get('maxTemp')?.value,\n      hmdLimitMin: this.formLimites?.get('minHum')?.value,\n      hmdLimitMax: this.formLimites?.get('maxHum')?.value\n    };\n    this.httpClient.post('https://proyecto-pif-arq.azurewebsites.net/api/updateLimites', body).subscribe(response => {\n      console.log(response);\n      if (response?.resultado) {\n        this.getLimites();\n        this.formLimites.reset();\n      }\n    }, error => {});\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","data","AppComponent","constructor","httpClient","fb","basicOptions","plugins","legend","labels","color","scales","x","ticks","grid","y","refreshData","getParameters","getLimites","formParametros","group","tmpCorreccion","required","hmdCorreccion","formLimites","minTemp","maxTemp","minHum","maxHum","ngOnInit","setInterval","updateGraphicData","tableData","fecha","toString","split","dataTemperatura","temperaturA_REAL","dataHumedad","humedaD_REAL","basicData","datasets","label","fill","borderColor","tension","get","subscribe","response","console","log","sort","temperatura","length","humedad","error","parametros","limites","guardarCorreccion","body","nuevoValorTemp","value","nuevoValorHumedad","post","resultado","reset","guardarLimites","tempLimitMin","tempLimitMax","hmdLimitMin","hmdLimitMax","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\Angel\\Arquitectura\\FRONT\\temperature-and-humidity-control\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport data from './data.json';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'temperature-and-humedity-control';\r\n  first = 0;\r\n  rows = 10;\r\n\r\n  public basicData: any;\r\n  public basicOptions: any;\r\n  public tableData: any[] = data;\r\n  public parametros: any;\r\n  public limites: any;\r\n  public formParametros: FormGroup;\r\n  public formLimites: FormGroup;\r\n  public temperatura: any;\r\n  public humedad: any;\r\n\r\n  constructor(private httpClient: HttpClient, private fb: FormBuilder) {\r\n    this.basicOptions = {\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: '#495057',\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: '#495057',\r\n          },\r\n          grid: {\r\n            color: '#ebedef',\r\n          },\r\n        },\r\n      },\r\n    };\r\n    this.refreshData();\r\n    this.getParameters();\r\n    this.getLimites();\r\n    this.formParametros = this.fb.group({\r\n      tmpCorreccion: [null, Validators.required],\r\n      hmdCorreccion: [null, Validators.required],\r\n    });\r\n    this.formLimites = this.fb.group({\r\n      minTemp: [null, Validators.required],\r\n      maxTemp: [null, Validators.required],\r\n      minHum: [null, Validators.required],\r\n      maxHum: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setInterval(() => {\r\n      this.refreshData();\r\n      this.getParameters();\r\n      this.getLimites();\r\n    }, 20000);\r\n  }\r\n\r\n  public updateGraphicData(): void {\r\n    let labels = [\r\n      this.tableData[0].fecha.toString().split('T')[1],\r\n      this.tableData[20].fecha.toString().split('T')[1],\r\n      this.tableData[40].fecha.toString().split('T')[1],\r\n      this.tableData[60].fecha.toString().split('T')[1],\r\n      this.tableData[80].fecha.toString().split('T')[1],\r\n      this.tableData[100].fecha.toString().split('T')[1],\r\n      this.tableData[120].fecha.toString().split('T')[1],\r\n      this.tableData[140].fecha.toString().split('T')[1],\r\n      this.tableData[160].fecha.toString().split('T')[1],\r\n      this.tableData[180].fecha.toString().split('T')[1],\r\n      this.tableData[200].fecha.toString().split('T')[1],\r\n    ];\r\n    let dataTemperatura = [\r\n      this.tableData[0].temperaturA_REAL,\r\n      this.tableData[20].temperaturA_REAL,\r\n      this.tableData[40].temperaturA_REAL,\r\n      this.tableData[60].temperaturA_REAL,\r\n      this.tableData[80].temperaturA_REAL,\r\n      this.tableData[100].temperaturA_REAL,\r\n      this.tableData[120].temperaturA_REAL,\r\n      this.tableData[140].temperaturA_REAL,\r\n      this.tableData[160].temperaturA_REAL,\r\n      this.tableData[180].temperaturA_REAL,\r\n      this.tableData[200].temperaturA_REAL,\r\n    ];\r\n\r\n    let dataHumedad = [\r\n      this.tableData[0].humedaD_REAL,\r\n      this.tableData[20].humedaD_REAL,\r\n      this.tableData[40].humedaD_REAL,\r\n      this.tableData[60].humedaD_REAL,\r\n      this.tableData[80].humedaD_REAL,\r\n      this.tableData[100].humedaD_REAL,\r\n      this.tableData[120].humedaD_REAL,\r\n      this.tableData[140].humedaD_REAL,\r\n      this.tableData[160].humedaD_REAL,\r\n      this.tableData[180].humedaD_REAL,\r\n      this.tableData[200].humedaD_REAL,\r\n    ];\r\n    this.basicData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Temperatura',\r\n          data: dataTemperatura,\r\n          fill: false,\r\n          borderColor: '#42A5F5',\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          label: 'Humedad',\r\n          data: dataHumedad,\r\n          fill: false,\r\n          borderColor: '#FFA726',\r\n          tension: 0.4,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  public refreshData(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getSenses')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.tableData = response;\r\n          this.tableData = this.tableData.sort();\r\n          this.temperatura =\r\n            this.tableData[this.tableData.length].temperaturA_REAL;\r\n          this.humedad = this.tableData[this.tableData.length].humedaD_REAL;\r\n          this.updateGraphicData();\r\n        },\r\n        (error) => {\r\n          this.tableData = data;\r\n          this.updateGraphicData();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getParameters(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getParameters')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.parametros = response;\r\n        },\r\n        (error) => {}\r\n      );\r\n  }\r\n  public getLimites(): void {\r\n    this.httpClient\r\n      .get('https://proyecto-pif-arq.azurewebsites.net/api/getLimites')\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          this.limites = response;\r\n        },\r\n        (error) => {}\r\n      );\r\n  }\r\n\r\n  public guardarCorreccion() {\r\n    const body: any = {\r\n      nuevoValorTemp: this.formParametros?.get('tmpCorreccion')?.value,\r\n      nuevoValorHumedad: this.formParametros?.get('hmdCorreccion')?.value,\r\n    };\r\n    this.httpClient\r\n      .post('https://proyecto-pif-arq.azurewebsites.net/api/calibrar', body)\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          if (response?.resultado) {\r\n            this.getParameters();\r\n            this.formParametros.reset();\r\n          }\r\n        },\r\n        (error) => {}\r\n      );\r\n  }\r\n\r\n  public guardarLimites() {\r\n    const body: any = {\r\n      tempLimitMin: this.formLimites?.get('minTemp')?.value,\r\n      tempLimitMax: this.formLimites?.get('maxTemp')?.value,\r\n      hmdLimitMin: this.formLimites?.get('minHum')?.value,\r\n      hmdLimitMax: this.formLimites?.get('maxHum')?.value,\r\n    };\r\n    this.httpClient\r\n      .post(\r\n        'https://proyecto-pif-arq.azurewebsites.net/api/updateLimites',\r\n        body\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          if (response?.resultado) {\r\n            this.getLimites();\r\n            this.formLimites.reset();\r\n          }\r\n        },\r\n        (error) => {}\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}